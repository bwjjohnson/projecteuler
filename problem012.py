#!/usr/bin/python
#
# Project Euler (projecteuler.net) - Problem 12
# The sequence of triangle numbers is generated by adding the natural numbers. So 
# the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten 
# terms would be:
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# Let us list the factors of the first seven triangle numbers:
#
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
# What is the value of the first triangle number to have over five hundred 
# divisors?

import math

c = 1
tnl = 1
while 1:
  c += 1
  tn = tnl + c
  tnl = tn
  factors = 2
  for d in range(2, int(math.ceil(math.sqrt(tn)))):
    if tn % d == 0:
      factors += 2
  if factors > 500: 
    print tn
    break

